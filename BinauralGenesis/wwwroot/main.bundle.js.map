{"version":3,"sources":["C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src async","C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.component.css","C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.component.html","C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.component.ts","C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.module.ts","C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/environments/environment.ts","C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<h1>Binaural Beat Generator</h1>\\r\\n<div mat-app-background>\\r\\n  <div id=\\\"leftEarDiv\\\">\\r\\n    <label>Left ear frequency</label>\\r\\n    <!-- TODO: make a separate binaural slider class to clean this shit up! -->\\r\\n    <md-slider class=\\\"leftEarFrequency\\\"\\r\\n               max=\\\"400\\\"\\r\\n               min=\\\"48\\\"\\r\\n               step=\\\"0.1\\\"\\r\\n               [(ngModel)]=\\\"leftFrequency\\\">\\r\\n    </md-slider>\\r\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"leftFrequency\\\" min=\\\"1\\\" max=\\\"400\\\" placeholder=\\\"100\\\" step=\\\"0.1\\\" />\\r\\n    <label>{{leftFrequency}}hz</label>\\r\\n  </div>\\r\\n  <div id=\\\"rightEarDiv\\\">\\r\\n    <label>Right ear frequency</label>\\r\\n    <md-slider class=\\\"rightEarFrequency\\\"\\r\\n               max=\\\"400\\\"\\r\\n               min=\\\"48\\\"\\r\\n               step=\\\"0.1\\\"\\r\\n               [(ngModel)]=\\\"rightFrequency\\\">\\r\\n    </md-slider>\\r\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"rightFrequency\\\" min=\\\"1\\\" max=\\\"400\\\" placeholder=\\\"100\\\" step=\\\".1\\\" />\\r\\n    <label>{{rightFrequency}}hz</label>\\r\\n  </div>\\r\\n  <!-- TODO: Bind it to some function that updates on-the-fly, turns sound 'off' at zero volume. -->\\r\\n  <div id=\\\"volumeDiv\\\">\\r\\n    <label>Volume Level</label>\\r\\n    <md-slider class=\\\"volumeSlider\\\"\\r\\n               max=\\\"100\\\"\\r\\n               min=\\\"0\\\"\\r\\n               title=\\\"Voluminous\\\"\\r\\n               step=\\\"1\\\"\\r\\n               [(ngModel)]=\\\"volumeLevel\\\">\\r\\n    </md-slider>\\r\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"volumeLevel\\\" min=\\\"0\\\" max=\\\"100\\\" placeholder=\\\"0\\\" step=\\\"1\\\" />\\r\\n    <label>{{volumeLevel}}%</label>\\r\\n  </div>\\r\\n\\r\\n  <button md-button id=\\\"button_PlayPause\\\" (click)=\\\"playPause()\\\">{{isPlaying ? \\\"Pause\\\" : \\\"Play\\\"}}</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http'\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n    constructor(private _httpService: Http) {\r\n\r\n    }\r\n\r\n    isPlaying: boolean = false;\r\n    volumeLevel: number = 0;\r\n    leftFrequency: number = 100.0;\r\n    rightFrequency: number = 107.83;\r\n\r\n    audioContext: AudioContext;\r\n    leftOscillator: OscillatorNode;\r\n    rightOscillator: OscillatorNode;\r\n    merger: ChannelMergerNode;\r\n    gain: GainNode;\r\n\r\n    ngOnInit() {\r\n        //Wire-up the audio path!\r\n        //merge two separate channels, merge them into stereo output,\r\n        //apply the gain-level to manage volume,\r\n        //and play!\r\n        this.audioContext = new AudioContext();\r\n    }\r\n    \r\n    hookUpAudio() {\r\n        //todo: any way to reuse audioNodes between starts and pauses?\r\n        this.leftOscillator = this.audioContext.createOscillator();\r\n        this.leftOscillator.frequency.value = this.leftFrequency;\r\n\r\n        this.rightOscillator = this.audioContext.createOscillator();\r\n        this.rightOscillator.frequency.value = this.rightFrequency;\r\n\r\n        this.merger = this.audioContext.createChannelMerger(2);\r\n\r\n        //todo: figure this shit out.  Are these channel counts or indices?\r\n        this.leftOscillator.connect(this.merger, 0, 0);\r\n        this.rightOscillator.connect(this.merger, 0, 1);\r\n\r\n        this.gain = this.audioContext.createGain();\r\n        this.gain.gain.value = Math.min((this.volumeLevel / 100), 1); //Don't allow crazy fucking volumes.\r\n\r\n        this.merger.connect(this.gain);\r\n\r\n        this.gain.connect(this.audioContext.destination);\r\n    }\r\n\r\n    playPause() {\r\n        this.isPlaying = !this.isPlaying;\r\n\r\n        //if we need to play the audio\r\n        if (this.isPlaying) {\r\n            //todo: exponential rampdown/rampup instead of tolerating clicks.\r\n            // come on, this is some rookie shit!\r\n            //is there some better way to handle play/pause?\r\n            this.hookUpAudio();\r\n            this.leftOscillator.start();\r\n            this.rightOscillator.start();\r\n        }\r\n        //if we need to pause the audio\r\n        else {\r\n            this.leftOscillator.stop();\r\n            this.rightOscillator.stop();\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MdButtonModule, MdSliderModule, MdCardModule } from '@angular/material';\r\nimport 'hammerjs';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpModule,\r\n      BrowserAnimationsModule,\r\n      MdButtonModule, MdCardModule, MdSliderModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Justin/Desktop/dev-scratch/BinauralGenesis/BinauralGenesis/src/main.ts"],"sourceRoot":"webpack:///"}